{"version":3,"sources":["components/PokedexEntry/hidden/EvolutionChain/EvolutionChain.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_UI_PkmnIcon_PkmnIcon__WEBPACK_IMPORTED_MODULE_1__","_material_ui_styles__WEBPACK_IMPORTED_MODULE_2__","useStyles","makeStyles","theme","root","display","overflow","flexWrap","alignItems","justifyContent","color","evoItem","evoMethod","padding","spacing","margin","minWidth","height","wordWrap","fontSize","border","flexDirection","@media screen and (maxWidth: 768px)","EvolutionChain","_ref","evoChain","classes","chain","evolutionMethod","_ref2","evolution_details","length","map","cur","id","Object","keys","currentMethod","key","a","createElement","className","method","name","replace","includes","createEvoItems","filter","current","props","reduce","b","concat","createEvolutionElements","species","createEvolutionMethodEl","evolutionBranch","checkEvolution","evolution","arr","arguments","undefined","push","evolves_to","checkEvoChain","currentBranch","Fragment"],"mappings":"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","file":"static/js/4.5370d66b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PkmnIcon from '../../../UI/PkmnIcon/PkmnIcon';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        overflow: \"hidden\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-evenly\",\r\n        color: \"white\",\r\n\r\n    },\r\n    evoItem: {\r\n        overflow: \"hidden\"\r\n    },\r\n    evoMethod: {\r\n        padding: theme.spacing(),\r\n        margin: theme.spacing(),\r\n        minWidth: \"100px\",\r\n        height: \"100px\",\r\n        wordWrap: \"break-ord\",\r\n        fontSize: \".4vw\",\r\n        border: \".1vw solid white\",\r\n        overflow: \"auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        \"@media screen and (maxWidth: 768px)\": {    \r\n            height:\"80px\",\r\n            fontSize: \"1vw\",\r\n        }\r\n    } \r\n\r\n \r\n}))\r\n\r\nconst EvolutionChain = ({ evoChain }) => {\r\n    const classes = useStyles();\r\n\r\n    if(evoChain.chain){\r\n        const checkEvoChain = evolution => evolution.evolves_to && evolution.evolves_to.length > 0\r\n        const checkEvolution = (evolution, arr = []) => {\r\n            arr.push([evolution]);\r\n    \r\n            if(checkEvoChain(evolution)){\r\n                if(evolution.evolves_to.length > 1){\r\n                    arr.push(evolution.evolves_to) \r\n                }else{\r\n                    evolution.evolves_to.map(cur => checkEvolution(cur, arr))\r\n                }\r\n            }\r\n            return arr\r\n        }\r\n    \r\n        const createEvoItems = (key, evolutionMethod, id) => {\r\n            \r\n            return key[evolutionMethod] \r\n            ? <span className={classes.evoItem} key={ evolutionMethod + id } method={key[evolutionMethod].name}>\r\n                    <div>{evolutionMethod.replace(/_/g, ' ')}: \r\n                        {key[evolutionMethod].name ? key[evolutionMethod].name : key[evolutionMethod]} \r\n                    </div>\r\n                    {\r\n                       \r\n                        key[evolutionMethod] && key[evolutionMethod].name && evolutionMethod.includes(\"item\") \r\n                        ? <PkmnIcon name={key[evolutionMethod].name} />\r\n                        : null\r\n                    }\r\n                </span>\r\n            : null\r\n        }\r\n    \r\n        const filterEvolutionMethod = (evolutionMethod) => {\r\n            \r\n            if(evolutionMethod === null){\r\n                return false\r\n            }else if(evolutionMethod && evolutionMethod.key.includes(\"trigger\") && evolutionMethod.props.method === \"level-up\"){\r\n                return false;\r\n            }\r\n            else{\r\n                return true;\r\n            }\r\n        }\r\n        const evolutionMethod = ({evolution_details}) => {\r\n            if(evolution_details.length === 0 ){\r\n                return\r\n            }\r\n            return evolution_details.map((cur, id) => Object.keys(cur)\r\n                .map(currentMethod => createEvoItems(cur, currentMethod, id))\r\n                .filter(current => filterEvolutionMethod(current)))\r\n            .reduce((a, b) => a.concat(b), []) // flatten\r\n        };\r\n        \r\n        const createEvolutionElements = (cur, id) => \r\n            <div className={classes.evoMethod}key={cur.species.name} >\r\n                <PkmnIcon name={cur.species.name} />\r\n                {cur.species.name}\r\n            </div>\r\n    \r\n\r\n        const createEvolutionMethodEl = (cur, id) => \r\n        <div className={classes.evoMethod} key={cur + id}>\r\n            {evolutionMethod(cur)}\r\n        </div>\r\n    \r\n        const evolutionBranch = checkEvolution(evoChain.chain).map((currentBranch, id) => \r\n            <React.Fragment key={\"branch\"+ id}>\r\n                {id > 0 ? <div>{currentBranch.map(createEvolutionMethodEl)}</div> : null}\r\n                <div>{currentBranch.map(createEvolutionElements)}</div>\r\n            </React.Fragment>)\r\n    \r\n        return <div className={classes.root}>{evolutionBranch}</div>\r\n    }\r\n \r\n}   \r\n\r\nexport default EvolutionChain;"],"sourceRoot":""}